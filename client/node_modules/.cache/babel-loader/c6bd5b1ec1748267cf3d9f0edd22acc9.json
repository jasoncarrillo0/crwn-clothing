{"ast":null,"code":"import { createSelector } from 'reselect';\n/* ----------------------CREATE SELECTORS FOR EACH KEY OF FIREBASECOLLECTIONS SLICE---------------------*/\n\nconst selectFirebaseCollections = appState => appState.firebaseCollections;\n\nexport const selectCollections = createSelector([selectFirebaseCollections], firebaseCollectionsState => firebaseCollectionsState.collections);\nexport const selectIsFetching = createSelector([selectFirebaseCollections], firebaseCollectionsState => firebaseCollectionsState.collectionsIsFetching);\nexport const selectErrorMsg = createSelector([selectFirebaseCollections], firebaseCollectionsState => firebaseCollectionsState.errorMsg);\n/* -------------------------------------OTHER SELECTORS-----------------------------------------*/\n\nexport const selectCollectionForPreview = createSelector([selectCollections], firebaseCollections => firebaseCollections ? Object.keys(firebaseCollections).map(key => firebaseCollections[key]) : []);\nexport function selectCollection(collectionUrlParam) {\n  return createSelector([selectCollections], firebaseCollections => firebaseCollections ? firebaseCollections[collectionUrlParam] : []);\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/shop-data/shop-data.selector.js"],"names":["createSelector","selectFirebaseCollections","appState","firebaseCollections","selectCollections","firebaseCollectionsState","collections","selectIsFetching","collectionsIsFetching","selectErrorMsg","errorMsg","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAGA;;AACA,MAAMC,yBAAyB,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,mBAAvD;;AACA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,yBAAD,CAD2C,EAE3CI,wBAAwB,IAAIA,wBAAwB,CAACC,WAFV,CAAxC;AAIP,OAAO,MAAMC,gBAAgB,GAAGP,cAAc,CAC1C,CAACC,yBAAD,CAD0C,EAE1CI,wBAAwB,IAAIA,wBAAwB,CAACG,qBAFX,CAAvC;AAIP,OAAO,MAAMC,cAAc,GAAGT,cAAc,CACxC,CAACC,yBAAD,CADwC,EAExCI,wBAAwB,IAAIA,wBAAwB,CAACK,QAFb,CAArC;AAOP;;AACA,OAAO,MAAMC,0BAA0B,GAAGX,cAAc,CACpD,CAACI,iBAAD,CADoD,EAEpDD,mBAAmB,IAAIA,mBAAmB,GAAGS,MAAM,CAACC,IAAP,CAAYV,mBAAZ,EAAiCW,GAAjC,CAAqCC,GAAG,IAAIZ,mBAAmB,CAACY,GAAD,CAA/D,CAAH,GAA2E,EAFjE,CAAjD;AAMP,OAAO,SAASC,gBAAT,CAA0BC,kBAA1B,EAA8C;AACjD,SAAOjB,cAAc,CACjB,CAACI,iBAAD,CADiB,EAEjBD,mBAAmB,IAAIA,mBAAmB,GAAGA,mBAAmB,CAACc,kBAAD,CAAtB,GAA6C,EAFtE,CAArB;AAIH","sourcesContent":["import { createSelector } from 'reselect';\n \n\n/* ----------------------CREATE SELECTORS FOR EACH KEY OF FIREBASECOLLECTIONS SLICE---------------------*/\nconst selectFirebaseCollections = appState => appState.firebaseCollections;\nexport const selectCollections = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollectionsState => firebaseCollectionsState.collections\n);\nexport const selectIsFetching = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollectionsState => firebaseCollectionsState.collectionsIsFetching\n);\nexport const selectErrorMsg = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollectionsState => firebaseCollectionsState.errorMsg\n);\n\n\n\n/* -------------------------------------OTHER SELECTORS-----------------------------------------*/\nexport const selectCollectionForPreview = createSelector(\n    [selectCollections],\n    firebaseCollections => firebaseCollections ? Object.keys(firebaseCollections).map(key => firebaseCollections[key]) : []\n)\n\n\nexport function selectCollection(collectionUrlParam) {\n    return createSelector(\n        [selectCollections],\n        firebaseCollections => firebaseCollections ? firebaseCollections[collectionUrlParam] : []\n    );\n}"]},"metadata":{},"sourceType":"module"}