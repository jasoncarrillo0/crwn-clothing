{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { ACTION_TYPES } from '../../action-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../../firebase/utils'; // takeEvery creates a non-blocking instance of a function so the app can continue\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ACTION_TYPES.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nfunction* fetchCollectionsAsync() {\n  yield;\n  const collectionsRef = firestore.collection('collections');\n  const snapshot = yield collectionsRef.get();\n  const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/_db/collections-data/collections-data.sagas.js"],"names":["takeEvery","call","ACTION_TYPES","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsAsync","collectionsRef","collection","snapshot","get","collectionsMap"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,yBAA1D,C,CAEA;;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAML,SAAS,CACXE,YAAY,CAACI,uBADF,EAEXC,qBAFW,CAAf;AAIH;;AAED,UAAUA,qBAAV,GAAkC;AAC9B;AACA,QAAMC,cAAc,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACA,QAAMC,QAAQ,GAAS,MAAMF,cAAc,CAACG,GAAf,EAA7B;AACA,QAAMC,cAAc,GAAG,MAAMX,IAAI,CAACG,8BAAD,EAAiCM,QAAjC,CAAjC;AACH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\nimport { ACTION_TYPES } from '../../action-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../../firebase/utils';\n\n// takeEvery creates a non-blocking instance of a function so the app can continue\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ACTION_TYPES.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync \n    );\n}\n\nfunction* fetchCollectionsAsync() {\n    yield\n    const collectionsRef = firestore.collection('collections');\n    const snapshot       = yield collectionsRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n}"]},"metadata":{},"sourceType":"module"}