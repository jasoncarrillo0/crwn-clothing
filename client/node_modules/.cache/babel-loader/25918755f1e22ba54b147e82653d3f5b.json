{"ast":null,"code":"import { ACTION_TYPES } from '../../action-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../../firebase/utils';\nexport function getFirebaseCollections(collectionsMap) {\n  return {\n    type: ACTION_TYPES.GET_COLLECTIONS_FROM_DB,\n    payload: collectionsMap\n  };\n}\nexport function fetchCollectionsStart() {\n  return {\n    type: ACTION_TYPES.FETCH_COLLECTIONS_START\n  };\n}\nexport function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ACTION_TYPES.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n}\nexport function fetchCollectionsFailure(errorMsg) {\n  return {\n    type: ACTION_TYPES.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMsg\n  };\n}\nexport function fetchCollectionsStartAsync() {\n  return dispatch => {\n    const collectionsRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionsRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/_db/collections-data/collections-data.actions.js"],"names":["ACTION_TYPES","firestore","convertCollectionSnapshotToMap","getFirebaseCollections","collectionsMap","type","GET_COLLECTIONS_FROM_DB","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMsg","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionsRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,YAAT,QAA6B,oBAA7B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,yBAA1D;AAEA,OAAO,SAASC,sBAAT,CAAgCC,cAAhC,EAAgD;AACnD,SAAO;AACHC,IAAAA,IAAI,EAAEL,YAAY,CAACM,uBADhB;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;AAED,OAAO,SAASI,qBAAT,GAAiC;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEL,YAAY,CAACS;AADhB,GAAP;AAGH;AAED,OAAO,SAASC,uBAAT,CAAiCN,cAAjC,EAAiD;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEL,YAAY,CAACW,yBADhB;AAEHJ,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH;AAED,OAAO,SAASQ,uBAAT,CAAiCC,QAAjC,EAA2C;AAC9C,SAAO;AACHR,IAAAA,IAAI,EAAEL,YAAY,CAACc,yBADhB;AAEHP,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH;AACD,OAAO,SAASE,0BAAT,GAAsC;AACzC,SAAOC,QAAQ,IAAI;AACf,UAAMC,cAAc,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAvB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AACAS,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAAI;AAClC,YAAMjB,cAAc,GAAGF,8BAA8B,CAACmB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACN,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGkB,KAHH,CAGSC,KAAK,IAAI;AACdP,MAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAR;AACH,KALD;AAMH,GATD;AAUH","sourcesContent":["import { ACTION_TYPES } from '../../action-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../../firebase/utils';\n\nexport function getFirebaseCollections(collectionsMap) {\n    return {\n        type: ACTION_TYPES.GET_COLLECTIONS_FROM_DB,\n        payload: collectionsMap\n    }\n}\n\nexport function fetchCollectionsStart() {\n    return {\n        type: ACTION_TYPES.FETCH_COLLECTIONS_START\n    }\n}\n\nexport function fetchCollectionsSuccess(collectionsMap) {\n    return {\n        type: ACTION_TYPES.FETCH_COLLECTIONS_SUCCESS,\n        payload: collectionsMap\n    }\n}\n\nexport function fetchCollectionsFailure(errorMsg) {\n    return {\n        type: ACTION_TYPES.FETCH_COLLECTIONS_FAILURE,\n        payload: errorMsg\n    }\n}\nexport function fetchCollectionsStartAsync() {\n    return dispatch => {\n        const collectionsRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        collectionsRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => {\n            dispatch(fetchCollectionsFailure(error.message));\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}