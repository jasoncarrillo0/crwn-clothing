{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/_Top-Level/App.jsx\";\nimport React, { Component } from 'react';\nimport HomePage from '../Home-Page/HomePage';\nimport Header from './Header';\nimport ShopPage from '../Shop-Page/ShopPage';\nimport CredentialsPage from '../Credentials-Page/CredentialsPage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDoc } from '../../firebase/utils';\nimport { setCurrentUser } from '../../redux/user/user-actions';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectUser } from '../../redux/user/user.selectors';\nimport CheckoutPage from '../Checkout-Page/CheckoutPage';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// given from connect high order component\n    // const { setCurrentUser } = this.props;\n    // if the user authentication state changes, firebase will send user obj back to this listener\n    // we will set the currentUser state to the sent user\n    // the user object contains a lot of useful data\n    // this is an asynchronous func\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //     if (userAuth) {\n    //         // below code may look confusing since this is all asynchronous logic\n    //         const userRef = await createUserProfileDoc(userAuth);\n    //         // async function that will return a snapshot object\n    //         // onSnapShot is a function but conceptually similar to an event listener\n    //         userRef.onSnapshot(snapShot => {\n    //             setCurrentUser({\n    //                 currentUser: {\n    //                     id: snapShot.id,\n    //                     ...snapShot.data()\n    //                 }\n    //             });\n    //         });\n    //     } \n    //     else {\n    //         // if the async function returns null, set state to null\n    //         setCurrentUser(userAuth);\n    //     }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-in\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(CredentialsPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // params: dispatch function from connect\n// return: an object: {setCurrentUser: dispatchFunc}\n// purpose: allow us to use an an action we defined in the App. It is destructured as setCurrentUser\n\n\nfunction mapDispatchToProps(dispatch) {\n  // key value will be the prop we destructure, and it's value as a key can be called since the value is a function\n  // the key name is essentially becomes the name of the anonymous function\n  return {\n    setCurrentUser: function (user) {\n      return dispatch(setCurrentUser(user));\n    }\n  };\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectUser\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/_Top-Level/App.jsx"],"names":["React","Component","HomePage","Header","ShopPage","CredentialsPage","Switch","Route","Redirect","auth","createUserProfileDoc","setCurrentUser","connect","createStructuredSelector","selectUser","CheckoutPage","App","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapDispatchToProps","dispatch","user","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,IAAT,EAAeC,oBAAf,QAA2C,sBAA3C;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAGA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBgB,mBADwB,GACF,IADE;AAAA;;AAExBC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKF,mBAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAElB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEa,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AACO,MAAA,MAAM,EAAG,MAAM,KAAKM,KAAL,CAAWC,WAAX,gBACV,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,gBAGV,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAWI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAElB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAFJ,CADJ;AAkBH;;AAvDuB,C,CAyD5B;AACA;AACA;;;AACA,SAASmB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC;AACA;AACA,SAAO;AACHb,IAAAA,cAAc,EAAE,UAASc,IAAT,EAAe;AAC3B,aAAOD,QAAQ,CAACb,cAAc,CAACc,IAAD,CAAf,CAAf;AACH;AAHE,GAAP;AAKH;;AAED,MAAMC,eAAe,GAAGb,wBAAwB,CAC5C;AACIS,EAAAA,WAAW,EAAER;AADjB,CAD4C,CAAhD;AAMA,eAAeF,OAAO,CAACc,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport HomePage from '../Home-Page/HomePage';\nimport Header from './Header';\nimport ShopPage from '../Shop-Page/ShopPage';\nimport CredentialsPage from '../Credentials-Page/CredentialsPage';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDoc } from '../../firebase/utils'\nimport { setCurrentUser } from '../../redux/user/user-actions';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectUser } from '../../redux/user/user.selectors';\nimport CheckoutPage from '../Checkout-Page/CheckoutPage'\n\n\nclass App extends Component {    \n    unsubscribeFromAuth = null;\n    componentDidMount() {\n        // given from connect high order component\n        // const { setCurrentUser } = this.props;\n        // if the user authentication state changes, firebase will send user obj back to this listener\n        // we will set the currentUser state to the sent user\n        // the user object contains a lot of useful data\n        // this is an asynchronous func\n        // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        //     if (userAuth) {\n        //         // below code may look confusing since this is all asynchronous logic\n        //         const userRef = await createUserProfileDoc(userAuth);\n        //         // async function that will return a snapshot object\n        //         // onSnapShot is a function but conceptually similar to an event listener\n        //         userRef.onSnapshot(snapShot => {\n        //             setCurrentUser({\n        //                 currentUser: {\n        //                     id: snapShot.id,\n        //                     ...snapShot.data()\n        //                 }\n        //             });\n        //         });\n        //     } \n        //     else {\n        //         // if the async function returns null, set state to null\n        //         setCurrentUser(userAuth);\n        //     }\n        // });\n\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromAuth();\n    }\n\n    render() {\n        return (\n            <>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage}/>\n                    <Route exact path=\"/checkout\" component={CheckoutPage}/>\n                    <Route path=\"/sign-in\" \n                           render={ () => this.props.currentUser ? (\n                                <Redirect to=\"/\"/>\n                                ) : (\n                                <CredentialsPage/>\n                                )\n                           }\n                    />\n                    <Route path=\"/shop\" component={ShopPage}/>\n                </Switch>\n            </>\n        )\n    }\n}\n// params: dispatch function from connect\n// return: an object: {setCurrentUser: dispatchFunc}\n// purpose: allow us to use an an action we defined in the App. It is destructured as setCurrentUser\nfunction mapDispatchToProps(dispatch) {\n    // key value will be the prop we destructure, and it's value as a key can be called since the value is a function\n    // the key name is essentially becomes the name of the anonymous function\n    return {\n        setCurrentUser: function(user) {\n            return dispatch(setCurrentUser(user));\n        }\n    }\n}\n\nconst mapStateToProps = createStructuredSelector(\n    {\n        currentUser: selectUser,\n    }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}