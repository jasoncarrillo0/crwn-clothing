{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/_Top-Level/Header.jsx\";\nimport React from 'react';\nimport styles from './Header.module.scss';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { auth } from '../../firebase/utils';\nimport crown from \"../../images/crown.svg\";\nimport { connect } from 'react-redux';\nimport CartIcon from './CartIcon';\nimport CartDropdown from '../Cart/CartDropdown';\nimport CategoriesDropdown from './CategoriesDropdown';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartVisibilityStatus } from '../../redux/cart/cart.selectors';\nimport { selectUser } from '../../redux/user/user.selectors';\nimport { withRouter } from 'react-router-dom';\nimport { signOutStart } from '../../redux/user/user-actions';\n\nconst Header = ({\n  currentUser,\n  cartIsHidden,\n  history,\n  signOutStart\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.topNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactSVG, {\n    className: styles.logo,\n    wrapper: \"div\",\n    src: crown,\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.links,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/shop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"SHOP\"), /*#__PURE__*/React.createElement(CategoriesDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"CONTACT\"), currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signOutLink\",\n    onClick: signOutStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 36\n    }\n  }, \"SIGN OUT\") : /*#__PURE__*/React.createElement(Link, {\n    to: \"/sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }\n  }, \"SIGN-IN\"), /*#__PURE__*/React.createElement(CartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), cartIsHidden ? /*#__PURE__*/React.createElement(CartDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }) : null);\n}; // params: takes in the root reducer\n// returns: an object with the return value of the user reducers state value\n// essentially it returns a copy of the user reducer's state\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectUser,\n  cartIsHidden: selectCartVisibilityStatus\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signOutStart: function () {\n      return dispatch(signOutStart());\n    }\n  };\n} // connect will pass the copy of the user reducer's state to Header\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/_Top-Level/Header.jsx"],"names":["React","styles","Link","ReactSVG","auth","connect","CartIcon","CartDropdown","CategoriesDropdown","createStructuredSelector","selectCartVisibilityStatus","selectUser","withRouter","signOutStart","Header","currentUser","cartIsHidden","history","topNav","logo","crown","push","links","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,+BAA7B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,OAA7B;AAAsCJ,EAAAA;AAAtC,CAAD,KAA0D;AACrE,sBACI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACiB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEjB,MAAM,CAACkB,IAA5B;AAAkC,IAAA,OAAO,EAAC,KAA1C;AAAgD,IAAA,GAAG,EAAEC,KAArD;AAA4D,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACI,IAAR,CAAa,GAAb,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACqB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAKQP,WAAW,gBAAI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAEF,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANvB,eAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ,EAaQG,YAAY,gBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACG,IAdvB,CADJ;AAmBH,CApBD,C,CAsBA;AACA;AACA;;;AACA,MAAMO,eAAe,GAAGd,wBAAwB,CAC5C;AACIM,EAAAA,WAAW,EAAEJ,UADjB;AAEIK,EAAAA,YAAY,EAAEN;AAFlB,CAD4C,CAAhD;;AAOA,SAASc,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHZ,IAAAA,YAAY,EAAE,YAAW;AACrB,aAAOY,QAAQ,CAACZ,YAAY,EAAb,CAAf;AACH;AAHE,GAAP;AAKH,C,CACD;;;AACA,eAAeD,UAAU,CAACP,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,MAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport styles from './Header.module.scss';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { auth } from '../../firebase/utils';\nimport crown from '../../images/crown.svg';\nimport { connect } from 'react-redux';\nimport CartIcon from './CartIcon';\nimport CartDropdown from '../Cart/CartDropdown'\nimport CategoriesDropdown from './CategoriesDropdown';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartVisibilityStatus } from '../../redux/cart/cart.selectors'\nimport { selectUser } from '../../redux/user/user.selectors';\nimport { withRouter } from 'react-router-dom';\nimport { signOutStart } from '../../redux/user/user-actions';\n\nconst Header = ({ currentUser, cartIsHidden, history, signOutStart }) => {\n    return (\n        <div className={styles.topNav}>\n            <ReactSVG className={styles.logo} wrapper=\"div\" src={crown} onClick={() => history.push(\"/\")}/>\n            <div className={styles.links}>\n                <Link to=\"/shop\">SHOP</Link>\n                <CategoriesDropdown/>\n                <Link to=\"/contact\">CONTACT</Link>\n                {\n                    currentUser ? (<div className=\"signOutLink\" onClick={signOutStart}>SIGN OUT</div>)\n                                : (<Link to=\"/sign-in\">SIGN-IN</Link>)\n                }\n                <CartIcon/>\n            </div>\n            {\n                cartIsHidden ? <CartDropdown/>\n                             : null\n            }\n        </div>\n    )\n}\n\n// params: takes in the root reducer\n// returns: an object with the return value of the user reducers state value\n// essentially it returns a copy of the user reducer's state\nconst mapStateToProps = createStructuredSelector(\n    {\n        currentUser: selectUser,\n        cartIsHidden: selectCartVisibilityStatus\n    }\n);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        signOutStart: function() {\n            return dispatch(signOutStart())\n        }\n    }\n}\n// connect will pass the copy of the user reducer's state to Header\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\n"]},"metadata":{},"sourceType":"module"}