{"ast":null,"code":"export function initializeOrUpdateCartQuantity(cartItems, cartItemToAdd) {\n  const existingCartItem = cartItems.find(cartItem => {\n    if (cartItem.id === cartItemToAdd.id) {\n      return cartItem;\n    } else {\n      return null;\n    }\n  });\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => {\n      if (cartItem.id === cartItemToAdd.id) {\n        return { ...cartItem,\n          quantity: cartItem.quantity + 1\n        };\n      } else {\n        return cartItem;\n      }\n    });\n  } else {\n    return [...cartItems, { ...cartItemToAdd,\n      quantity: 1\n    }];\n  }\n}\nexport function returnTotalCartAmount(itemsArr) {\n  // itemsArr = [{}, {}, {quantity: x}]\n  let total = 0;\n  itemsArr.forEach(item => {\n    total = total + item.quantity;\n  });\n  return total;\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/cart-action.utils.js"],"names":["initializeOrUpdateCartQuantity","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","returnTotalCartAmount","itemsArr","total","forEach","item"],"mappings":"AACA,OAAO,SAASA,8BAAT,CAAwCC,SAAxC,EAAmDC,aAAnD,EAAkE;AACrE,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAI;AAChD,QAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAlC,EAAsC;AAClC,aAAOD,QAAP;AACH,KAFD,MAGK;AACD,aAAO,IAAP;AACH;AACJ,GAPwB,CAAzB;;AASA,MAAIF,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAI;AAC7B,UAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAlC,EAAsC;AAClC,eAAO,EACH,GAAGD,QADA;AAEHG,UAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAF3B,SAAP;AAIH,OALD,MAMK;AACD,eAAOH,QAAP;AACH;AACJ,KAVM,CAAP;AAWH,GAZD,MAaK;AACD,WAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,MAAAA,QAAQ,EAAE;AAA7B,KAAf,CAAP;AACH;AACJ;AAGD,OAAO,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAC5C;AACA,MAAIC,KAAK,GAAG,CAAZ;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACrBF,IAAAA,KAAK,GAAGA,KAAK,GAAGE,IAAI,CAACL,QAArB;AACH,GAFD;AAGA,SAAOG,KAAP;AACH","sourcesContent":["\nexport function initializeOrUpdateCartQuantity(cartItems, cartItemToAdd) {\n    const existingCartItem = cartItems.find(cartItem => {\n        if (cartItem.id === cartItemToAdd.id) {\n            return cartItem\n        }\n        else {\n            return null\n        }\n    });\n    \n    if (existingCartItem) {\n        return cartItems.map(cartItem => {\n            if (cartItem.id === cartItemToAdd.id) {\n                return {\n                    ...cartItem,\n                    quantity: cartItem.quantity + 1\n                }\n            }\n            else {\n                return cartItem\n            }\n        });\n    }\n    else {\n        return [...cartItems, {...cartItemToAdd, quantity: 1}]\n    }\n}\n\n\nexport function returnTotalCartAmount(itemsArr) {\n    // itemsArr = [{}, {}, {quantity: x}]\n    let total = 0;\n    itemsArr.forEach(item => {\n        total = total + item.quantity;\n    });\n    return total;\n}"]},"metadata":{},"sourceType":"module"}