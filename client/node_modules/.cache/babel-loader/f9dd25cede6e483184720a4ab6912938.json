{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; // firebase obj will have the above imports\n\n/* ----------------------SETUP FIREBASE CONNECTION-------------------------------*/\n\nconst config = {\n  apiKey: \"AIzaSyD7mgmuZIWlFQF1olekhrLRzlRN9aOT3AI\",\n  authDomain: \"crwn-db-23765.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-23765.firebaseio.com\",\n  projectId: \"crwn-db-23765\",\n  storageBucket: \"crwn-db-23765.appspot.com\",\n  messagingSenderId: \"183816363458\",\n  appId: \"1:183816363458:web:16b534b2cca2a40e1d0a5b\",\n  measurementId: \"G-PQ0VS51PEG\"\n};\nfirebase.initializeApp(config); // get firebase auth interface (https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\n\nexport const auth = firebase.auth(); // NoSQL database\n\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\n/* -------------------------------UTILITIES -----------------------------------------*/\n// returns a userRef object, takes in a the auth\n\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // create snapShot\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const creationDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        creationDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error: \", error.message);\n    }\n  }\n\n  return userRef;\n}; // takes in a collection key\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/firebase/utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDoc","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","creationDate","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CACA;;AAGA;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAUAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,E,CACA;;AACA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb,C,CACP;;AACA,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AACP,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAeb,QAAf;AAGA;AAEA;;AACA,OAAO,MAAMmB,oBAAoB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACpE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,CAAe,UAASH,QAAQ,CAACI,GAAI,EAArC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB,CAHoE,CAKpE;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,YAAY,GAAG,IAAIC,IAAJ,EAArB;;AACA,QAAI;AACA,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,YAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOY,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAK,CAACG,OAA7B;AACH;AACJ;;AACD,SAAOd,OAAP;AACH,CArBM,C,CAuBP;;AACA,OAAO,MAAMe,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC5E,QAAMC,aAAa,GAAG5B,SAAS,CAAC6B,UAAV,CAAqBH,aAArB,CAAtB;AACA,QAAMI,KAAK,GAAW9B,SAAS,CAAC8B,KAAV,EAAtB;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACH,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACH,CATM","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// firebase obj will have the above imports\n\n\n/* ----------------------SETUP FIREBASE CONNECTION-------------------------------*/\nconst config = {\n    apiKey: \"AIzaSyD7mgmuZIWlFQF1olekhrLRzlRN9aOT3AI\",\n    authDomain: \"crwn-db-23765.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-23765.firebaseio.com\",\n    projectId: \"crwn-db-23765\",\n    storageBucket: \"crwn-db-23765.appspot.com\",\n    messagingSenderId: \"183816363458\",\n    appId: \"1:183816363458:web:16b534b2cca2a40e1d0a5b\",\n    measurementId: \"G-PQ0VS51PEG\"\n};\nfirebase.initializeApp(config);\n// get firebase auth interface (https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\nexport const auth = firebase.auth();\n// NoSQL database\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\n\n\n/* -------------------------------UTILITIES -----------------------------------------*/\n\n// returns a userRef object, takes in a the auth\nexport const createUserProfileDoc = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n    const userRef = firestore.doc(`/users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    \n    // create snapShot\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const creationDate = new Date();\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                creationDate,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log(\"Error: \", error.message);\n        }\n    }\n    return userRef;\n} \n\n// takes in a collection key\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    const batch         = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n}"]},"metadata":{},"sourceType":"module"}