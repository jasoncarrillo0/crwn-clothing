{"ast":null,"code":"import { createSelector } from 'reselect';\n/* ----------------------CREATE SELECTORS FOR EACH KEY OF FIREBASECOLLECTIONS SLICE---------------------*/\n\nconst selectFirebaseCollections = appState => appState.firebaseCollections;\n\nexport const selectCollections = createSelector([selectFirebaseCollections], firebaseCollections => firebaseCollections.collections);\nexport const selectIsFetching = createSelector([selectFirebaseCollections], firebaseCollections => firebaseCollections.collectionsIsFetching);\nexport const selectErrorMsg = createSelector([selectFirebaseCollections], firebaseCollections => firebaseCollections.errorMsg);\n/* -------------------------------------OTHER SELECTORS-----------------------------------------*/\n\nexport const selectCollectionForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport function selectCollection(collectionUrlParam) {\n  return createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : []);\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/shop-data/shop-data.selector.js"],"names":["createSelector","selectFirebaseCollections","appState","firebaseCollections","selectCollections","collections","selectIsFetching","collectionsIsFetching","selectErrorMsg","errorMsg","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAGA;;AACA,MAAMC,yBAAyB,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,mBAAvD;;AACA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,yBAAD,CAD2C,EAE3CE,mBAAmB,IAAIA,mBAAmB,CAACE,WAFA,CAAxC;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,yBAAD,CAD0C,EAE1CE,mBAAmB,IAAIA,mBAAmB,CAACI,qBAFD,CAAvC;AAIP,OAAO,MAAMC,cAAc,GAAGR,cAAc,CACxC,CAACC,yBAAD,CADwC,EAExCE,mBAAmB,IAAIA,mBAAmB,CAACM,QAFH,CAArC;AAOP;;AACA,OAAO,MAAMC,0BAA0B,GAAGV,cAAc,CACpD,CAACI,iBAAD,CADoD,EAEpDC,WAAW,IAAIA,WAAW,GAAGM,MAAM,CAACC,IAAP,CAAYP,WAAZ,EAAyBQ,GAAzB,CAA6BC,GAAG,IAAIT,WAAW,CAACS,GAAD,CAA/C,CAAH,GAA2D,EAFjC,CAAjD;AAMP,OAAO,SAASC,gBAAT,CAA0BC,kBAA1B,EAA8C;AACjD,SAAOhB,cAAc,CACjB,CAACI,iBAAD,CADiB,EAEjBC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACW,kBAAD,CAAd,GAAqC,EAF9C,CAArB;AAIH","sourcesContent":["import { createSelector } from 'reselect';\n \n\n/* ----------------------CREATE SELECTORS FOR EACH KEY OF FIREBASECOLLECTIONS SLICE---------------------*/\nconst selectFirebaseCollections = appState => appState.firebaseCollections;\nexport const selectCollections = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollections => firebaseCollections.collections\n);\nexport const selectIsFetching = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollections => firebaseCollections.collectionsIsFetching\n);\nexport const selectErrorMsg = createSelector(\n    [selectFirebaseCollections],\n    firebaseCollections => firebaseCollections.errorMsg\n);\n\n\n\n/* -------------------------------------OTHER SELECTORS-----------------------------------------*/\nexport const selectCollectionForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\n\nexport function selectCollection(collectionUrlParam) {\n    return createSelector(\n        [selectCollections],\n        collections => collections ? collections[collectionUrlParam] : []\n    );\n}"]},"metadata":{},"sourceType":"module"}