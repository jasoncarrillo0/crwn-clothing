{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst cart = state => state.cart; // createSelector(key from app state, function(key) {return key.value}))\n// takes in a key value (a reducer), returns any value from the reducer wanted\n\n\nexport const selectCartItems = createSelector([cart], cart => cart.items);\nexport const selectCartVisibilityStatus = createSelector([cart], cart => cart.cartIsHidden); // get total cart items\n\nexport const selectCartItemsCount = createSelector([selectCartItems], function (cartItems) {\n  return cartItems.reduce((accumulatedQuantity, cartItem) => {\n    return accumulatedQuantity + cartItem.quantity;\n  }, 0);\n}); // get total cost of all items\n\nexport const selectTotalCostInCart = createSelector([selectCartItems], function (cartItems) {\n  return cartItems.reduce((accumulatedQuantity, cartItem) => {\n    return accumulatedQuantity + cartItem.quantity * cartItem.price;\n  }, 0);\n});","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","cart","state","selectCartItems","items","selectCartVisibilityStatus","cartIsHidden","selectCartItemsCount","cartItems","reduce","accumulatedQuantity","cartItem","quantity","selectTotalCostInCart","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAIA,KAAK,CAACD,IAA5B,C,CACA;AACA;;;AACA,OAAO,MAAME,eAAe,GAAGH,cAAc,CACzC,CAACC,IAAD,CADyC,EAEzCA,IAAI,IAAIA,IAAI,CAACG,KAF4B,CAAtC;AAIP,OAAO,MAAMC,0BAA0B,GAAGL,cAAc,CACpD,CAACC,IAAD,CADoD,EAEpDA,IAAI,IAAIA,IAAI,CAACK,YAFuC,CAAjD,C,CAMP;;AACA,OAAO,MAAMC,oBAAoB,GAAGP,cAAc,CAC9C,CAACG,eAAD,CAD8C,EAE9C,UAAUK,SAAV,EAAqB;AACjB,SAAOA,SAAS,CAACC,MAAV,CAAkB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmC;AACxD,WAAOD,mBAAmB,GAAGC,QAAQ,CAACC,QAAtC;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAN6C,CAA3C,C,CASP;;AACA,OAAO,MAAMC,qBAAqB,GAAGb,cAAc,CAC/C,CAACG,eAAD,CAD+C,EAE/C,UAAUK,SAAV,EAAqB;AACjB,SAAOA,SAAS,CAACC,MAAV,CAAkB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmC;AACxD,WAAOD,mBAAmB,GAAIC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KAA3D;AACH,GAFM,EAEJ,CAFI,CAAP;AAGH,CAN8C,CAA5C","sourcesContent":["import { createSelector } from 'reselect';\n\nconst cart = state => state.cart;\n// createSelector(key from app state, function(key) {return key.value}))\n// takes in a key value (a reducer), returns any value from the reducer wanted\nexport const selectCartItems = createSelector(\n    [cart],\n    cart => cart.items\n);\nexport const selectCartVisibilityStatus = createSelector(\n    [cart],\n    cart => cart.cartIsHidden\n)\n\n\n// get total cart items\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    function (cartItems) {\n        return cartItems.reduce( (accumulatedQuantity, cartItem) => {\n            return accumulatedQuantity + cartItem.quantity\n        }, 0);\n    }\n);\n\n// get total cost of all items\nexport const selectTotalCostInCart = createSelector(\n    [selectCartItems],\n    function (cartItems) {\n        return cartItems.reduce( (accumulatedQuantity, cartItem) => {\n            return accumulatedQuantity + (cartItem.quantity * cartItem.price);\n        }, 0);\n    }\n);"]},"metadata":{},"sourceType":"module"}