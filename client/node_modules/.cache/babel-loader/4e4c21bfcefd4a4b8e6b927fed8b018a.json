{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; // import the localStorage object from browser; you can also get sessionStorage\n\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user-reducer';\nimport cartReducer from './cart/cart-reducer';\nimport directoryReducer from './directory-data/directory.reducer';\nimport collectionsReducer from './collections-data/collections-data.reducer';\nimport updateCollectionsReducer from './shop/shop.reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'] // value is an array of which reducers you want to store in storage obj\n  // we only want 'cart' because firebase handles the user storage.\n\n};\nconst rootReducer = combineReducers({\n  // if the reducer has more than one action, each action will be a key\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  collections: collectionsReducer,\n  firebaseCollections: updateCollectionsReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","collectionsReducer","updateCollectionsReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","collections","firebaseCollections"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,OAAOC,wBAAP,MAAqC,qBAArC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBP,EAAAA,OAFkB;AAGlBQ,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGE;AACpB;;AAJkB,CAAtB;AAOA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAChC;AACAY,EAAAA,IAAI,EAAET,WAF0B;AAGhCU,EAAAA,IAAI,EAAET,WAH0B;AAIhCU,EAAAA,SAAS,EAAET,gBAJqB;AAKhCU,EAAAA,WAAW,EAAET,kBALmB;AAMhCU,EAAAA,mBAAmB,EAAET;AANW,CAAD,CAAnC;AASA,eAAeN,cAAc,CAACO,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\n// import the localStorage object from browser; you can also get sessionStorage\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user-reducer';\nimport cartReducer from './cart/cart-reducer';\nimport directoryReducer from './directory-data/directory.reducer';\nimport collectionsReducer from './collections-data/collections-data.reducer';\nimport updateCollectionsReducer from './shop/shop.reducer';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart'] // value is an array of which reducers you want to store in storage obj\n    // we only want 'cart' because firebase handles the user storage.\n}\n\nconst rootReducer = combineReducers({\n    // if the reducer has more than one action, each action will be a key\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    collections: collectionsReducer,\n    firebaseCollections: updateCollectionsReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}