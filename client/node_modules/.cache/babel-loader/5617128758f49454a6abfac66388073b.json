{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Credentials-Page/SignIn.jsx\";\nimport React, { Component } from 'react';\nimport CustomButton from '../Reusable/CustomButton';\nimport { TextField } from '@material-ui/core';\nimport { auth } from '../../firebase/utils';\nimport styles from './SignIn.module.scss';\nimport googleSignInStart from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      try {\n        await auth.signInWithEmailAndPassword();\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {\n        console.log(\"Error logging in: \" + err.message);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.signInWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.signInHeading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.signInSubheading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: styles.signInForm,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"email\",\n      type: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      variant: \"standard\",\n      label: \"Email\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      variant: \"standard\",\n      label: \"Password\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"arabic\",\n      type: \"text\",\n      variant: \"standard\",\n      label: \"Arabic\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttonsWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"SIGN-IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"SIGN IN WITH GOOGLE\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    googleSignInStart: function () {\n      return dispatch(googleSignInStart());\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Credentials-Page/SignIn.jsx"],"names":["React","Component","CustomButton","TextField","auth","styles","googleSignInStart","connect","SignIn","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","signInWithEmailAndPassword","email","password","err","console","log","message","state","render","signInWrapper","signInHeading","signInSubheading","signInForm","style","fontFamily","buttonsWrapper","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CustomButton from '../Reusable/CustomButton';\nimport { TextField } from '@material-ui/core';\nimport { auth } from '../../firebase/utils';\nimport styles from './SignIn.module.scss';\nimport googleSignInStart from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password:''\n        }\n    }\n\n    handleChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({ [name]: value }) \n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            await auth.signInWithEmailAndPassword()\n            this.setState({ email: '', password: ''})\n        }\n        catch (err) {\n            console.log(\"Error logging in: \" + err.message);\n        }\n    }\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className={styles.signInWrapper}>\n                <h1 className={styles.signInHeading}>I already have an account</h1>\n                <p className={styles.signInSubheading}>Sign in with your email and password</p>\n                <form className={styles.signInForm} onSubmit={this.handleSubmit}>\n                    <TextField name=\"email\" \n                            type=\"email\" \n                            onChange={this.handleChange}\n                            value={this.state.email}\n                            variant=\"standard\"\n                            label=\"Email\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed'}}}\n                    />\n                    <TextField name=\"password\" \n                            type=\"password\" \n                            onChange={this.handleChange}\n                            value={this.state.password}\n                            variant=\"standard\"\n                            label=\"Password\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed',}}}\n                    />\n                    <TextField name=\"arabic\" \n                            type=\"text\" \n                            variant=\"standard\"\n                            label=\"Arabic\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed',}}}\n                    />\n                    <div className={styles.buttonsWrapper}>\n                        <CustomButton type=\"submit\">SIGN-IN</CustomButton>\n                        <CustomButton \n                            onClick={googleSignInStart}\n                            isGoogleSignIn={true}\n                        >SIGN IN WITH GOOGLE</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }   \n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        googleSignInStart: function() {\n            return dispatch(googleSignInStart());\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}