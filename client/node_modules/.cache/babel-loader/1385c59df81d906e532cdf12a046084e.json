{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { ACTION_TYPES } from '../action-types';\nimport { auth, firestore, provider, createUserProfileDoc } from '../../firebase/utils';\nexport function* onGoogleSignInStart() {\n  yield takeLatest(ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const userRef = yield auth.signInWithPopup(provider);\n    yield console.log(userRef);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","ACTION_TYPES","auth","firestore","provider","createUserProfileDoc","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","userRef","signInWithPopup","console","log","error","message","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,oBAApC,QAAgE,sBAAhE;AAEA,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMT,UAAU,CACZI,YAAY,CAACM,oBADD,EAEZC,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUA,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMP,IAAI,CAACQ,eAAL,CAAqBN,QAArB,CAAtB;AACA,UAAMO,OAAO,CAACC,GAAR,CAAYH,OAAZ,CAAN;AACH,GAHD,CAGE,OAAMI,KAAN,EAAa;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACH;AACJ;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CACNC,IAAI,CAACM,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { ACTION_TYPES } from '../action-types';\nimport { auth, firestore, provider, createUserProfileDoc } from '../../firebase/utils';\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        ACTION_TYPES.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    );\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const userRef = yield auth.signInWithPopup(provider);\n        yield console.log(userRef);\n    } catch(error) {\n        console.log(error.message);\n    }\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}