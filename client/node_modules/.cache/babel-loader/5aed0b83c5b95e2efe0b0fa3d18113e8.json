{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Shop-Page/ShopPage.jsx\";\nimport React from 'react';\nimport CollectionsOverview from './CollectionsOverview';\nimport CollectionPage from '../Collection-Page/CollectionPage';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/utils';\nimport { connect } from 'react-redux';\nimport { getFirebaseCollections } from '../../redux/shop-data/shop-data.actions'; // ShopPage gets collections from our firebase db\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      getFirebaseCollections\n    } = this.props;\n    const collectionsRef = firestore.collection('collections');\n    this.unsubscribeFromSnapShot = collectionsRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      getFirebaseCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shopPageWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.path,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getFirebaseCollections: function (collectionsMap) {\n      return dispatch(getFirebaseCollections(collectionsMap));\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Shop-Page/ShopPage.jsx"],"names":["React","CollectionsOverview","CollectionPage","Route","firestore","convertCollectionSnapshotToMap","connect","getFirebaseCollections","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","props","collectionsRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,sBAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,yCAAvC,C,CAEA;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,uBAFmC,GAET,IAFS;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAA6B,KAAKK,KAAxC;AACA,UAAMC,cAAc,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAvB;AACA,SAAKJ,uBAAL,GAA+BG,cAAc,CAACE,UAAf,CAA0B,MAAMC,QAAN,IAAkB;AACvE,YAAMC,cAAc,GAAGZ,8BAA8B,CAACW,QAAD,CAArD;AACAT,MAAAA,sBAAsB,CAACU,cAAD,CAAtB;AACH,KAH8B,CAA/B;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEO,KAAK,CAACC,IAAzB;AAA+B,MAAA,SAAS,EAAEnB,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AArBkC;;AAwBvC,SAASmB,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHf,IAAAA,sBAAsB,EAAE,UAASU,cAAT,EAAyB;AAC7C,aAAOK,QAAQ,CAACf,sBAAsB,CAACU,cAAD,CAAvB,CAAf;AACH;AAHE,GAAP;AAKH;;AACD,eAAeX,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverview from './CollectionsOverview';\nimport CollectionPage from '../Collection-Page/CollectionPage';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/utils';\nimport { connect } from 'react-redux';\nimport { getFirebaseCollections } from '../../redux/shop-data/shop-data.actions';\n\n// ShopPage gets collections from our firebase db\nclass ShopPage extends React.Component {\n\n    unsubscribeFromSnapShot = null;\n\n    componentDidMount() {\n        const { getFirebaseCollections } = this.props;\n        const collectionsRef = firestore.collection('collections');\n        this.unsubscribeFromSnapShot = collectionsRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n            getFirebaseCollections(collectionsMap);\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <div className=\"shopPageWrapper\">\n                <Route exact path={match.path} component={CollectionsOverview}/>\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}/>\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getFirebaseCollections: function(collectionsMap) {\n            return dispatch(getFirebaseCollections(collectionsMap));\n        } \n    }\n}\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}