{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Credentials-Page/SignUp.jsx\";\nimport React, { Component } from 'react';\nimport CustomButton from '../Reusable/CustomButton';\nimport { TextField } from '@material-ui/core';\nimport { auth, createUserProfileDoc } from '../../firebase/utils';\nimport './signUp.scss';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match\");\n        return;\n      }\n\n      try {\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password);\n        await createUserProfileDoc(user, {\n          displayName\n        });\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.log(\"Error adding user: \" + error.message);\n      }\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"signUpHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"signUpSubheading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signUpForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"displayName\",\n      type: \"text\",\n      value: this.state.displayName,\n      onChange: event => this.handleChange,\n      variant: \"standard\",\n      label: \"Name\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      variant: \"standard\",\n      label: \"Email\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      variant: \"standard\",\n      label: \"Password\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"confirmPassword\",\n      type: \"password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      variant: \"standard\",\n      label: \"Confirm Password\",\n      fullWidth: true,\n      InputLabelProps: {\n        style: {\n          fontFamily: 'Open Sans Condensed'\n        }\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonsWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"SIGN UP\"))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/components/Credentials-Page/SignUp.jsx"],"names":["React","Component","CustomButton","TextField","auth","createUserProfileDoc","SignUp","constructor","props","handleChange","event","value","name","target","setState","handleSubmit","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","error","console","log","message","render","style","fontFamily"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CustomButton from '../Reusable/CustomButton';\nimport { TextField } from '@material-ui/core';\nimport { auth, createUserProfileDoc } from '../../firebase/utils';\nimport './signUp.scss';\n\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayName: '',\n            email: '',\n            password:'',\n            confirmPassword:''\n        }\n    }\n\n    handleChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({ [name]: value }) \n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const { displayName, email, password, confirmPassword } = this.state;\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\");\n            return;\n        }\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            await createUserProfileDoc(user, { displayName });\n            this.setState({\n                displayName: '',\n                email: '',\n                password:'',\n                confirmPassword:''\n            });\n        }\n        catch (error) {\n            console.log(\"Error adding user: \" + error.message);\n        }\n        \n\n\n    }\n    render() {\n        return (\n            <div className=\"signUpWrapper\">\n                <h1 className=\"signUpHeading\">I do not have an account</h1>\n                <p className=\"signUpSubheading\">Sign in with your email and password</p>\n                <form className=\"signUpForm\" onSubmit={this.handleSubmit}>\n                    <TextField name=\"displayName\" \n                            type=\"text\" \n                            value={this.state.displayName}\n                            onChange={event => this.handleChange}\n                            variant=\"standard\"\n                            label=\"Name\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed'}}}\n                    />\n                    <TextField name=\"email\" \n                            type=\"email\" \n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            variant=\"standard\"\n                            label=\"Email\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed'}}}\n                            required\n                    />\n                    <TextField name=\"password\" \n                            type=\"password\" \n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            variant=\"standard\"\n                            label=\"Password\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed',}}}\n                            required\n                    />\n                    <TextField name='confirmPassword'\n                            type=\"password\" \n                            value={this.state.confirmPassword}\n                            onChange={this.handleChange}\n                            variant=\"standard\"\n                            label=\"Confirm Password\"\n                            fullWidth={true}\n                            InputLabelProps={{style: {fontFamily: 'Open Sans Condensed',}}}\n                            required\n                    />\n                    <div className=\"buttonsWrapper\">\n                        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }   \n}\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}