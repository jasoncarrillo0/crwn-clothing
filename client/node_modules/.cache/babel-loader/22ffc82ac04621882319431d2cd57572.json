{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from '../redux/_db/collections-data/collections-data.sagas';\nconst sagaMiddleWares = createSagaMiddleware();\nconst middleWares = [sagaMiddleWares];\nsagaMiddleWares.run(fetchCollectionsStart);\n\nif (process.env.NODE_ENV === \"development\") {\n  middleWares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/jasoncarrillo/Documents/Coding/React Projects/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","thunk","createSagaMiddleware","fetchCollectionsStart","sagaMiddleWares","middleWares","run","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,sDAAtC;AAEA,MAAMC,eAAe,GAAGF,oBAAoB,EAA5C;AACA,MAAMG,WAAW,GAAG,CAACD,eAAD,CAApB;AACAA,eAAe,CAACE,GAAhB,CAAoBH,qBAApB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBZ,MAAjB;AACH;;AACD,OAAO,MAAMa,KAAK,GAASf,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAA/B;AACP,OAAO,MAAMO,SAAS,GAAKb,YAAY,CAACY,KAAD,CAAhC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from '../redux/_db/collections-data/collections-data.sagas';\n\nconst sagaMiddleWares = createSagaMiddleware();\nconst middleWares = [sagaMiddleWares];\nsagaMiddleWares.run(fetchCollectionsStart);\n\nif (process.env.NODE_ENV === \"development\") {\n    middleWares.push(logger);\n}\nexport const store       = createStore(rootReducer, applyMiddleware(...middleWares));\nexport const persistor   = persistStore(store);\n\n"]},"metadata":{},"sourceType":"module"}